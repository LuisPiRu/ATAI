import time
import gym
import tensorflow as tf
from tensorflow import keras #We will use Keras to create the neural network
from tensorflow.keras import datasets, layers, models, initializers #Option 2 below

#Input transformation (preImageSize -> (210,160,3))
def image_transformation(newImage, new_size=(105, 80)): #Revise size of image (105,80,1)

    newImage = tf.newImage.rgb_to_grayscale(newImage) #We have to convert to grayscale the image
    newImage = tf.newImage.resize(newImage, new_size)
    newImage = newImage / 255 #Normalize newImage
    return newImage


env = gym.make("MsPacman-v0")

def nnCreation()
model = models.Sequential()
model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(105, 80, 1)))
#32 are filters
#(3,3) is kernel size
#Same means that the input is padded with '0' (convolution input and output have the same size)
#relu = rectifive linear 
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))

model.add(layers.Flatten())
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(1, activation='sigmoid'))
return model

#--------------------------------------------------------------------------------------------------------------
model.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])


init = tf.global_variables_initializer()
with tf.Session() as sess:
init.run()






